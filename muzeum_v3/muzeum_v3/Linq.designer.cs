#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace muzeum_v3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="muzeum")]
	public partial class LinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAutor(Autor instance);
    partial void UpdateAutor(Autor instance);
    partial void DeleteAutor(Autor instance);
    partial void InsertWlasciciel(Wlasciciel instance);
    partial void UpdateWlasciciel(Wlasciciel instance);
    partial void DeleteWlasciciel(Wlasciciel instance);
    partial void InsertBilet(Bilet instance);
    partial void UpdateBilet(Bilet instance);
    partial void DeleteBilet(Bilet instance);
    partial void InsertEksponat(Eksponat instance);
    partial void UpdateEksponat(Eksponat instance);
    partial void DeleteEksponat(Eksponat instance);
    partial void InsertEkspozycja(Ekspozycja instance);
    partial void UpdateEkspozycja(Ekspozycja instance);
    partial void DeleteEkspozycja(Ekspozycja instance);
    partial void InsertLokalizacja(Lokalizacja instance);
    partial void UpdateLokalizacja(Lokalizacja instance);
    partial void DeleteLokalizacja(Lokalizacja instance);
    partial void InsertOrganizator(Organizator instance);
    partial void UpdateOrganizator(Organizator instance);
    partial void DeleteOrganizator(Organizator instance);
    partial void InsertPrezentacje(Prezentacje instance);
    partial void UpdatePrezentacje(Prezentacje instance);
    partial void DeletePrezentacje(Prezentacje instance);
    partial void InsertPrzypisanie(Przypisanie instance);
    partial void UpdatePrzypisanie(Przypisanie instance);
    partial void DeletePrzypisanie(Przypisanie instance);
    partial void InsertSala(Sala instance);
    partial void UpdateSala(Sala instance);
    partial void DeleteSala(Sala instance);
    partial void InsertSprzedaz(Sprzedaz instance);
    partial void UpdateSprzedaz(Sprzedaz instance);
    partial void DeleteSprzedaz(Sprzedaz instance);
    #endregion
		
		public LinqDataContext() : 
				base(global::muzeum_v3.Properties.Settings.Default.muzeumConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Autor> Autors
		{
			get
			{
				return this.GetTable<Autor>();
			}
		}
		
		public System.Data.Linq.Table<Wlasciciel> Wlasciciels
		{
			get
			{
				return this.GetTable<Wlasciciel>();
			}
		}
		
		public System.Data.Linq.Table<Bilet> Bilets
		{
			get
			{
				return this.GetTable<Bilet>();
			}
		}
		
		public System.Data.Linq.Table<Eksponat> Eksponats
		{
			get
			{
				return this.GetTable<Eksponat>();
			}
		}
		
		public System.Data.Linq.Table<Ekspozycja> Ekspozycjas
		{
			get
			{
				return this.GetTable<Ekspozycja>();
			}
		}
		
		public System.Data.Linq.Table<Lokalizacja> Lokalizacjas
		{
			get
			{
				return this.GetTable<Lokalizacja>();
			}
		}
		
		public System.Data.Linq.Table<Organizator> Organizators
		{
			get
			{
				return this.GetTable<Organizator>();
			}
		}
		
		public System.Data.Linq.Table<Prezentacje> Prezentacjes
		{
			get
			{
				return this.GetTable<Prezentacje>();
			}
		}
		
		public System.Data.Linq.Table<Przypisanie> Przypisanies
		{
			get
			{
				return this.GetTable<Przypisanie>();
			}
		}
		
		public System.Data.Linq.Table<Sala> Salas
		{
			get
			{
				return this.GetTable<Sala>();
			}
		}
		
		public System.Data.Linq.Table<Sprzedaz> Sprzedazs
		{
			get
			{
				return this.GetTable<Sprzedaz>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddAuthor")]
		public int AddAuthor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_autora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(150)")] string data_urodzenia, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string data_smierci, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string opis_autora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id_autora)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nazwa_autora, data_urodzenia, data_smierci, opis_autora, id_autora);
			id_autora = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateOwner")]
		public int UpdateOwner([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_wlasciciela, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_wlasciciela, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string miasto_wlasciciela, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string kraj_wlasciciela, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email_wlasciciela, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string telefon_wlasciciela)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_wlasciciela, nazwa_wlasciciela, miasto_wlasciciela, kraj_wlasciciela, email_wlasciciela, telefon_wlasciciela);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddExhibit")]
		public int AddExhibit([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_eksponatu, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(150)")] string opis_eksponatu, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string autor_eksponatu, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string wlasciciel_eksponatu, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id_eksponatu)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nazwa_eksponatu, opis_eksponatu, autor_eksponatu, wlasciciel_eksponatu, id_eksponatu);
			id_eksponatu = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddExposition")]
		public int AddExposition([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_ekspozycji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(150)")] string nazwa_organizatora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_lokalizacji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string opis_ekspozycji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id_ekspozycji)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nazwa_ekspozycji, nazwa_organizatora, nazwa_lokalizacji, opis_ekspozycji, id_ekspozycji);
			id_ekspozycji = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddHall")]
		public int AddHall([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_lokalizacji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_sali, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(150)")] string opis_sali, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id_sali)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nazwa_lokalizacji, nazwa_sali, opis_sali, id_sali);
			id_sali = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddLocation")]
		public int AddLocation([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_lokalizacji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(150)")] string opis_lokalizacji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id_lokalizacji)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nazwa_lokalizacji, opis_lokalizacji, id_lokalizacji);
			id_lokalizacji = ((System.Nullable<int>)(result.GetParameterValue(2)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddOrg")]
		public int AddOrg([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_organizatora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string miasto_organizatora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string telefon_organizatora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string e_mail_organizatora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id_organizatora)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nazwa_organizatora, miasto_organizatora, telefon_organizatora, e_mail_organizatora, id_organizatora);
			id_organizatora = ((System.Nullable<int>)(result.GetParameterValue(4)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddOwner")]
		public int AddOwner([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_wlasciciela, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string miasto_wlasciciela, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string kraj_wlasciciela, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string email_wlasciciela, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string telefon_wlasciciela, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id_wlasciciela)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nazwa_wlasciciela, miasto_wlasciciela, kraj_wlasciciela, email_wlasciciela, telefon_wlasciciela, id_wlasciciela);
			id_wlasciciela = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddPresentation")]
		public int AddPresentation([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> data_rozpoczecia, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> data_zakonczenia, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string nazwa_eksponatu, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string nazwa_ekspozycji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string nazwa_sali, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id_prezentacji)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), data_rozpoczecia, data_zakonczenia, nazwa_eksponatu, nazwa_ekspozycji, nazwa_sali, id_prezentacji);
			id_prezentacji = ((System.Nullable<int>)(result.GetParameterValue(5)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddSale")]
		public int AddSale([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string nazwa_biletu, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string cena_biletu, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string nazwa_ekspozycji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] ref System.Nullable<int> id_sprzedazy)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), nazwa_biletu, cena_biletu, nazwa_ekspozycji, id_sprzedazy);
			id_sprzedazy = ((System.Nullable<int>)(result.GetParameterValue(3)));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteExhibit")]
		public int DeleteExhibit([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_eksponatu)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_eksponatu);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteExposition")]
		public int DeleteExposition([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_ekspozycji)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_ekspozycji);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAuthors")]
		public ISingleResult<GetAuthorsResult> GetAuthors()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAuthorsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetExhibits")]
		public ISingleResult<GetExhibitsResult> GetExhibits()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetExhibitsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetExpositions")]
		public ISingleResult<GetExpositionsResult> GetExpositions()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetExpositionsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetHalls")]
		public ISingleResult<GetHallsResult> GetHalls()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetHallsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetLocations")]
		public ISingleResult<GetLocationsResult> GetLocations()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetLocationsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetOrgs")]
		public ISingleResult<GetOrgsResult> GetOrgs()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetOrgsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetOwners")]
		public ISingleResult<GetOwnersResult> GetOwners()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetOwnersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTickets")]
		public ISingleResult<GetTicketsResult> GetTickets()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetTicketsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateAuthor")]
		public int UpdateAuthor([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_autora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_autora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(150)")] string data_urodzenia, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string data_smierci, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string opis_autora)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_autora, nazwa_autora, data_urodzenia, data_smierci, opis_autora);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateExhibit")]
		public int UpdateExhibit([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_eksponatu, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_eksponatu, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(150)")] string opis_eksponatu, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string autor_eksponatu, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string wlasciciel_eksponatu)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_eksponatu, nazwa_eksponatu, opis_eksponatu, autor_eksponatu, wlasciciel_eksponatu);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateExposition")]
		public int UpdateExposition([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_ekspozycji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_ekspozycji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(150)")] string nazwa_organizatora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_lokalizacji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string opis_ekspozycji)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_ekspozycji, nazwa_ekspozycji, nazwa_organizatora, nazwa_lokalizacji, opis_ekspozycji);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateHall")]
		public int UpdateHall([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_sali, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_lokalizacji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_sali, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(150)")] string opis_sali)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_sali, nazwa_lokalizacji, nazwa_sali, opis_sali);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateLocation")]
		public int UpdateLocation([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_lokalizacji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_lokalizacji, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(150)")] string opis_lokalizacji)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_lokalizacji, nazwa_lokalizacji, opis_lokalizacji);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateOrg")]
		public int UpdateOrg([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id_organizatora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string nazwa_organizatora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string miasto_organizatora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string e_mail_organizatora, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string telefon_organizatora)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id_organizatora, nazwa_organizatora, miasto_organizatora, e_mail_organizatora, telefon_organizatora);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autor")]
	public partial class Autor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_autora;
		
		private string _nazwa_autora;
		
		private System.Nullable<System.DateTime> _data_urodzenia;
		
		private System.Nullable<System.DateTime> _data_smierci;
		
		private string _opis_autora;
		
		private EntitySet<Eksponat> _Eksponats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_autoraChanging(int value);
    partial void Onid_autoraChanged();
    partial void Onnazwa_autoraChanging(string value);
    partial void Onnazwa_autoraChanged();
    partial void Ondata_urodzeniaChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_urodzeniaChanged();
    partial void Ondata_smierciChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_smierciChanged();
    partial void Onopis_autoraChanging(string value);
    partial void Onopis_autoraChanged();
    #endregion
		
		public Autor()
		{
			this._Eksponats = new EntitySet<Eksponat>(new Action<Eksponat>(this.attach_Eksponats), new Action<Eksponat>(this.detach_Eksponats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_autora", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_autora
		{
			get
			{
				return this._id_autora;
			}
			set
			{
				if ((this._id_autora != value))
				{
					this.Onid_autoraChanging(value);
					this.SendPropertyChanging();
					this._id_autora = value;
					this.SendPropertyChanged("id_autora");
					this.Onid_autoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_autora", DbType="VarChar(50)")]
		public string nazwa_autora
		{
			get
			{
				return this._nazwa_autora;
			}
			set
			{
				if ((this._nazwa_autora != value))
				{
					this.Onnazwa_autoraChanging(value);
					this.SendPropertyChanging();
					this._nazwa_autora = value;
					this.SendPropertyChanged("nazwa_autora");
					this.Onnazwa_autoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_urodzenia", DbType="Date")]
		public System.Nullable<System.DateTime> data_urodzenia
		{
			get
			{
				return this._data_urodzenia;
			}
			set
			{
				if ((this._data_urodzenia != value))
				{
					this.Ondata_urodzeniaChanging(value);
					this.SendPropertyChanging();
					this._data_urodzenia = value;
					this.SendPropertyChanged("data_urodzenia");
					this.Ondata_urodzeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_smierci", DbType="Date")]
		public System.Nullable<System.DateTime> data_smierci
		{
			get
			{
				return this._data_smierci;
			}
			set
			{
				if ((this._data_smierci != value))
				{
					this.Ondata_smierciChanging(value);
					this.SendPropertyChanging();
					this._data_smierci = value;
					this.SendPropertyChanged("data_smierci");
					this.Ondata_smierciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis_autora", DbType="VarChar(150)")]
		public string opis_autora
		{
			get
			{
				return this._opis_autora;
			}
			set
			{
				if ((this._opis_autora != value))
				{
					this.Onopis_autoraChanging(value);
					this.SendPropertyChanging();
					this._opis_autora = value;
					this.SendPropertyChanged("opis_autora");
					this.Onopis_autoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autor_Eksponat", Storage="_Eksponats", ThisKey="id_autora", OtherKey="id_autora")]
		public EntitySet<Eksponat> Eksponats
		{
			get
			{
				return this._Eksponats;
			}
			set
			{
				this._Eksponats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Eksponats(Eksponat entity)
		{
			this.SendPropertyChanging();
			entity.Autor = this;
		}
		
		private void detach_Eksponats(Eksponat entity)
		{
			this.SendPropertyChanging();
			entity.Autor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Wlasciciel")]
	public partial class Wlasciciel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_wlasciciela;
		
		private string _nazwa_wlasciciela;
		
		private string _miasto_wlasciciela;
		
		private string _kraj_wlasciciela;
		
		private string _email_wlasciciela;
		
		private string _telefon_wlasciciela;
		
		private EntitySet<Eksponat> _Eksponats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_wlascicielaChanging(int value);
    partial void Onid_wlascicielaChanged();
    partial void Onnazwa_wlascicielaChanging(string value);
    partial void Onnazwa_wlascicielaChanged();
    partial void Onmiasto_wlascicielaChanging(string value);
    partial void Onmiasto_wlascicielaChanged();
    partial void Onkraj_wlascicielaChanging(string value);
    partial void Onkraj_wlascicielaChanged();
    partial void Onemail_wlascicielaChanging(string value);
    partial void Onemail_wlascicielaChanged();
    partial void Ontelefon_wlascicielaChanging(string value);
    partial void Ontelefon_wlascicielaChanged();
    #endregion
		
		public Wlasciciel()
		{
			this._Eksponats = new EntitySet<Eksponat>(new Action<Eksponat>(this.attach_Eksponats), new Action<Eksponat>(this.detach_Eksponats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_wlasciciela", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_wlasciciela
		{
			get
			{
				return this._id_wlasciciela;
			}
			set
			{
				if ((this._id_wlasciciela != value))
				{
					this.Onid_wlascicielaChanging(value);
					this.SendPropertyChanging();
					this._id_wlasciciela = value;
					this.SendPropertyChanged("id_wlasciciela");
					this.Onid_wlascicielaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_wlasciciela", DbType="VarChar(50)")]
		public string nazwa_wlasciciela
		{
			get
			{
				return this._nazwa_wlasciciela;
			}
			set
			{
				if ((this._nazwa_wlasciciela != value))
				{
					this.Onnazwa_wlascicielaChanging(value);
					this.SendPropertyChanging();
					this._nazwa_wlasciciela = value;
					this.SendPropertyChanged("nazwa_wlasciciela");
					this.Onnazwa_wlascicielaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_miasto_wlasciciela", DbType="VarChar(50)")]
		public string miasto_wlasciciela
		{
			get
			{
				return this._miasto_wlasciciela;
			}
			set
			{
				if ((this._miasto_wlasciciela != value))
				{
					this.Onmiasto_wlascicielaChanging(value);
					this.SendPropertyChanging();
					this._miasto_wlasciciela = value;
					this.SendPropertyChanged("miasto_wlasciciela");
					this.Onmiasto_wlascicielaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kraj_wlasciciela", DbType="VarChar(50)")]
		public string kraj_wlasciciela
		{
			get
			{
				return this._kraj_wlasciciela;
			}
			set
			{
				if ((this._kraj_wlasciciela != value))
				{
					this.Onkraj_wlascicielaChanging(value);
					this.SendPropertyChanging();
					this._kraj_wlasciciela = value;
					this.SendPropertyChanged("kraj_wlasciciela");
					this.Onkraj_wlascicielaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_wlasciciela", DbType="VarChar(50)")]
		public string email_wlasciciela
		{
			get
			{
				return this._email_wlasciciela;
			}
			set
			{
				if ((this._email_wlasciciela != value))
				{
					this.Onemail_wlascicielaChanging(value);
					this.SendPropertyChanging();
					this._email_wlasciciela = value;
					this.SendPropertyChanged("email_wlasciciela");
					this.Onemail_wlascicielaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefon_wlasciciela", DbType="VarChar(50)")]
		public string telefon_wlasciciela
		{
			get
			{
				return this._telefon_wlasciciela;
			}
			set
			{
				if ((this._telefon_wlasciciela != value))
				{
					this.Ontelefon_wlascicielaChanging(value);
					this.SendPropertyChanging();
					this._telefon_wlasciciela = value;
					this.SendPropertyChanged("telefon_wlasciciela");
					this.Ontelefon_wlascicielaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Wlasciciel_Eksponat", Storage="_Eksponats", ThisKey="id_wlasciciela", OtherKey="id_wlasciciela")]
		public EntitySet<Eksponat> Eksponats
		{
			get
			{
				return this._Eksponats;
			}
			set
			{
				this._Eksponats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Eksponats(Eksponat entity)
		{
			this.SendPropertyChanging();
			entity.Wlasciciel = this;
		}
		
		private void detach_Eksponats(Eksponat entity)
		{
			this.SendPropertyChanging();
			entity.Wlasciciel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bilet")]
	public partial class Bilet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_biletu;
		
		private decimal _cena_biletu;
		
		private string _nazwa_biletu;
		
		private EntitySet<Sprzedaz> _Sprzedazs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_biletuChanging(int value);
    partial void Onid_biletuChanged();
    partial void Oncena_biletuChanging(decimal value);
    partial void Oncena_biletuChanged();
    partial void Onnazwa_biletuChanging(string value);
    partial void Onnazwa_biletuChanged();
    #endregion
		
		public Bilet()
		{
			this._Sprzedazs = new EntitySet<Sprzedaz>(new Action<Sprzedaz>(this.attach_Sprzedazs), new Action<Sprzedaz>(this.detach_Sprzedazs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_biletu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_biletu
		{
			get
			{
				return this._id_biletu;
			}
			set
			{
				if ((this._id_biletu != value))
				{
					this.Onid_biletuChanging(value);
					this.SendPropertyChanging();
					this._id_biletu = value;
					this.SendPropertyChanged("id_biletu");
					this.Onid_biletuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cena_biletu", DbType="SmallMoney NOT NULL")]
		public decimal cena_biletu
		{
			get
			{
				return this._cena_biletu;
			}
			set
			{
				if ((this._cena_biletu != value))
				{
					this.Oncena_biletuChanging(value);
					this.SendPropertyChanging();
					this._cena_biletu = value;
					this.SendPropertyChanged("cena_biletu");
					this.Oncena_biletuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_biletu", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_biletu
		{
			get
			{
				return this._nazwa_biletu;
			}
			set
			{
				if ((this._nazwa_biletu != value))
				{
					this.Onnazwa_biletuChanging(value);
					this.SendPropertyChanging();
					this._nazwa_biletu = value;
					this.SendPropertyChanged("nazwa_biletu");
					this.Onnazwa_biletuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bilet_Sprzedaz", Storage="_Sprzedazs", ThisKey="id_biletu", OtherKey="id_biletu")]
		public EntitySet<Sprzedaz> Sprzedazs
		{
			get
			{
				return this._Sprzedazs;
			}
			set
			{
				this._Sprzedazs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sprzedazs(Sprzedaz entity)
		{
			this.SendPropertyChanging();
			entity.Bilet = this;
		}
		
		private void detach_Sprzedazs(Sprzedaz entity)
		{
			this.SendPropertyChanging();
			entity.Bilet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Eksponat")]
	public partial class Eksponat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_eksponatu;
		
		private string _nazwa_eksponatu;
		
		private string _opis_eksponatu;
		
		private int _id_wlasciciela;
		
		private int _id_autora;
		
		private EntitySet<Prezentacje> _Prezentacjes;
		
		private EntitySet<Przypisanie> _Przypisanies;
		
		private EntityRef<Autor> _Autor;
		
		private EntityRef<Wlasciciel> _Wlasciciel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_eksponatuChanging(int value);
    partial void Onid_eksponatuChanged();
    partial void Onnazwa_eksponatuChanging(string value);
    partial void Onnazwa_eksponatuChanged();
    partial void Onopis_eksponatuChanging(string value);
    partial void Onopis_eksponatuChanged();
    partial void Onid_wlascicielaChanging(int value);
    partial void Onid_wlascicielaChanged();
    partial void Onid_autoraChanging(int value);
    partial void Onid_autoraChanged();
    #endregion
		
		public Eksponat()
		{
			this._Prezentacjes = new EntitySet<Prezentacje>(new Action<Prezentacje>(this.attach_Prezentacjes), new Action<Prezentacje>(this.detach_Prezentacjes));
			this._Przypisanies = new EntitySet<Przypisanie>(new Action<Przypisanie>(this.attach_Przypisanies), new Action<Przypisanie>(this.detach_Przypisanies));
			this._Autor = default(EntityRef<Autor>);
			this._Wlasciciel = default(EntityRef<Wlasciciel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_eksponatu", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_eksponatu
		{
			get
			{
				return this._id_eksponatu;
			}
			set
			{
				if ((this._id_eksponatu != value))
				{
					this.Onid_eksponatuChanging(value);
					this.SendPropertyChanging();
					this._id_eksponatu = value;
					this.SendPropertyChanged("id_eksponatu");
					this.Onid_eksponatuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_eksponatu", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_eksponatu
		{
			get
			{
				return this._nazwa_eksponatu;
			}
			set
			{
				if ((this._nazwa_eksponatu != value))
				{
					this.Onnazwa_eksponatuChanging(value);
					this.SendPropertyChanging();
					this._nazwa_eksponatu = value;
					this.SendPropertyChanged("nazwa_eksponatu");
					this.Onnazwa_eksponatuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis_eksponatu", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string opis_eksponatu
		{
			get
			{
				return this._opis_eksponatu;
			}
			set
			{
				if ((this._opis_eksponatu != value))
				{
					this.Onopis_eksponatuChanging(value);
					this.SendPropertyChanging();
					this._opis_eksponatu = value;
					this.SendPropertyChanged("opis_eksponatu");
					this.Onopis_eksponatuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_wlasciciela", DbType="Int NOT NULL")]
		public int id_wlasciciela
		{
			get
			{
				return this._id_wlasciciela;
			}
			set
			{
				if ((this._id_wlasciciela != value))
				{
					if (this._Wlasciciel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_wlascicielaChanging(value);
					this.SendPropertyChanging();
					this._id_wlasciciela = value;
					this.SendPropertyChanged("id_wlasciciela");
					this.Onid_wlascicielaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_autora", DbType="Int NOT NULL")]
		public int id_autora
		{
			get
			{
				return this._id_autora;
			}
			set
			{
				if ((this._id_autora != value))
				{
					if (this._Autor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_autoraChanging(value);
					this.SendPropertyChanging();
					this._id_autora = value;
					this.SendPropertyChanged("id_autora");
					this.Onid_autoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Eksponat_Prezentacje", Storage="_Prezentacjes", ThisKey="id_eksponatu", OtherKey="id_eksponatu")]
		public EntitySet<Prezentacje> Prezentacjes
		{
			get
			{
				return this._Prezentacjes;
			}
			set
			{
				this._Prezentacjes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Eksponat_Przypisanie", Storage="_Przypisanies", ThisKey="id_eksponatu", OtherKey="id_eksponatu")]
		public EntitySet<Przypisanie> Przypisanies
		{
			get
			{
				return this._Przypisanies;
			}
			set
			{
				this._Przypisanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autor_Eksponat", Storage="_Autor", ThisKey="id_autora", OtherKey="id_autora", IsForeignKey=true)]
		public Autor Autor
		{
			get
			{
				return this._Autor.Entity;
			}
			set
			{
				Autor previousValue = this._Autor.Entity;
				if (((previousValue != value) 
							|| (this._Autor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Autor.Entity = null;
						previousValue.Eksponats.Remove(this);
					}
					this._Autor.Entity = value;
					if ((value != null))
					{
						value.Eksponats.Add(this);
						this._id_autora = value.id_autora;
					}
					else
					{
						this._id_autora = default(int);
					}
					this.SendPropertyChanged("Autor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Wlasciciel_Eksponat", Storage="_Wlasciciel", ThisKey="id_wlasciciela", OtherKey="id_wlasciciela", IsForeignKey=true)]
		public Wlasciciel Wlasciciel
		{
			get
			{
				return this._Wlasciciel.Entity;
			}
			set
			{
				Wlasciciel previousValue = this._Wlasciciel.Entity;
				if (((previousValue != value) 
							|| (this._Wlasciciel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Wlasciciel.Entity = null;
						previousValue.Eksponats.Remove(this);
					}
					this._Wlasciciel.Entity = value;
					if ((value != null))
					{
						value.Eksponats.Add(this);
						this._id_wlasciciela = value.id_wlasciciela;
					}
					else
					{
						this._id_wlasciciela = default(int);
					}
					this.SendPropertyChanged("Wlasciciel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prezentacjes(Prezentacje entity)
		{
			this.SendPropertyChanging();
			entity.Eksponat = this;
		}
		
		private void detach_Prezentacjes(Prezentacje entity)
		{
			this.SendPropertyChanging();
			entity.Eksponat = null;
		}
		
		private void attach_Przypisanies(Przypisanie entity)
		{
			this.SendPropertyChanging();
			entity.Eksponat = this;
		}
		
		private void detach_Przypisanies(Przypisanie entity)
		{
			this.SendPropertyChanging();
			entity.Eksponat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ekspozycja")]
	public partial class Ekspozycja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_ekspozycji;
		
		private string _nazwa_ekspozycji;
		
		private int _id_organizatora;
		
		private int _id_lokalizacji;
		
		private string _opis_ekspozycji;
		
		private EntitySet<Prezentacje> _Prezentacjes;
		
		private EntitySet<Przypisanie> _Przypisanies;
		
		private EntitySet<Sprzedaz> _Sprzedazs;
		
		private EntityRef<Lokalizacja> _Lokalizacja;
		
		private EntityRef<Organizator> _Organizator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ekspozycjiChanging(int value);
    partial void Onid_ekspozycjiChanged();
    partial void Onnazwa_ekspozycjiChanging(string value);
    partial void Onnazwa_ekspozycjiChanged();
    partial void Onid_organizatoraChanging(int value);
    partial void Onid_organizatoraChanged();
    partial void Onid_lokalizacjiChanging(int value);
    partial void Onid_lokalizacjiChanged();
    partial void Onopis_ekspozycjiChanging(string value);
    partial void Onopis_ekspozycjiChanged();
    #endregion
		
		public Ekspozycja()
		{
			this._Prezentacjes = new EntitySet<Prezentacje>(new Action<Prezentacje>(this.attach_Prezentacjes), new Action<Prezentacje>(this.detach_Prezentacjes));
			this._Przypisanies = new EntitySet<Przypisanie>(new Action<Przypisanie>(this.attach_Przypisanies), new Action<Przypisanie>(this.detach_Przypisanies));
			this._Sprzedazs = new EntitySet<Sprzedaz>(new Action<Sprzedaz>(this.attach_Sprzedazs), new Action<Sprzedaz>(this.detach_Sprzedazs));
			this._Lokalizacja = default(EntityRef<Lokalizacja>);
			this._Organizator = default(EntityRef<Organizator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ekspozycji", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_ekspozycji
		{
			get
			{
				return this._id_ekspozycji;
			}
			set
			{
				if ((this._id_ekspozycji != value))
				{
					this.Onid_ekspozycjiChanging(value);
					this.SendPropertyChanging();
					this._id_ekspozycji = value;
					this.SendPropertyChanged("id_ekspozycji");
					this.Onid_ekspozycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_ekspozycji", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_ekspozycji
		{
			get
			{
				return this._nazwa_ekspozycji;
			}
			set
			{
				if ((this._nazwa_ekspozycji != value))
				{
					this.Onnazwa_ekspozycjiChanging(value);
					this.SendPropertyChanging();
					this._nazwa_ekspozycji = value;
					this.SendPropertyChanged("nazwa_ekspozycji");
					this.Onnazwa_ekspozycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_organizatora", DbType="Int NOT NULL")]
		public int id_organizatora
		{
			get
			{
				return this._id_organizatora;
			}
			set
			{
				if ((this._id_organizatora != value))
				{
					if (this._Organizator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_organizatoraChanging(value);
					this.SendPropertyChanging();
					this._id_organizatora = value;
					this.SendPropertyChanged("id_organizatora");
					this.Onid_organizatoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lokalizacji", DbType="Int NOT NULL")]
		public int id_lokalizacji
		{
			get
			{
				return this._id_lokalizacji;
			}
			set
			{
				if ((this._id_lokalizacji != value))
				{
					if (this._Lokalizacja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_lokalizacjiChanging(value);
					this.SendPropertyChanging();
					this._id_lokalizacji = value;
					this.SendPropertyChanged("id_lokalizacji");
					this.Onid_lokalizacjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis_ekspozycji", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string opis_ekspozycji
		{
			get
			{
				return this._opis_ekspozycji;
			}
			set
			{
				if ((this._opis_ekspozycji != value))
				{
					this.Onopis_ekspozycjiChanging(value);
					this.SendPropertyChanging();
					this._opis_ekspozycji = value;
					this.SendPropertyChanged("opis_ekspozycji");
					this.Onopis_ekspozycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ekspozycja_Prezentacje", Storage="_Prezentacjes", ThisKey="id_ekspozycji", OtherKey="id_ekspozycji")]
		public EntitySet<Prezentacje> Prezentacjes
		{
			get
			{
				return this._Prezentacjes;
			}
			set
			{
				this._Prezentacjes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ekspozycja_Przypisanie", Storage="_Przypisanies", ThisKey="id_ekspozycji", OtherKey="id_ekspozycji")]
		public EntitySet<Przypisanie> Przypisanies
		{
			get
			{
				return this._Przypisanies;
			}
			set
			{
				this._Przypisanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ekspozycja_Sprzedaz", Storage="_Sprzedazs", ThisKey="id_ekspozycji", OtherKey="id_ekspozycji")]
		public EntitySet<Sprzedaz> Sprzedazs
		{
			get
			{
				return this._Sprzedazs;
			}
			set
			{
				this._Sprzedazs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lokalizacja_Ekspozycja", Storage="_Lokalizacja", ThisKey="id_lokalizacji", OtherKey="id_lokalizacji", IsForeignKey=true)]
		public Lokalizacja Lokalizacja
		{
			get
			{
				return this._Lokalizacja.Entity;
			}
			set
			{
				Lokalizacja previousValue = this._Lokalizacja.Entity;
				if (((previousValue != value) 
							|| (this._Lokalizacja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lokalizacja.Entity = null;
						previousValue.Ekspozycjas.Remove(this);
					}
					this._Lokalizacja.Entity = value;
					if ((value != null))
					{
						value.Ekspozycjas.Add(this);
						this._id_lokalizacji = value.id_lokalizacji;
					}
					else
					{
						this._id_lokalizacji = default(int);
					}
					this.SendPropertyChanged("Lokalizacja");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizator_Ekspozycja", Storage="_Organizator", ThisKey="id_organizatora", OtherKey="id_organizatora", IsForeignKey=true)]
		public Organizator Organizator
		{
			get
			{
				return this._Organizator.Entity;
			}
			set
			{
				Organizator previousValue = this._Organizator.Entity;
				if (((previousValue != value) 
							|| (this._Organizator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Organizator.Entity = null;
						previousValue.Ekspozycjas.Remove(this);
					}
					this._Organizator.Entity = value;
					if ((value != null))
					{
						value.Ekspozycjas.Add(this);
						this._id_organizatora = value.id_organizatora;
					}
					else
					{
						this._id_organizatora = default(int);
					}
					this.SendPropertyChanged("Organizator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prezentacjes(Prezentacje entity)
		{
			this.SendPropertyChanging();
			entity.Ekspozycja = this;
		}
		
		private void detach_Prezentacjes(Prezentacje entity)
		{
			this.SendPropertyChanging();
			entity.Ekspozycja = null;
		}
		
		private void attach_Przypisanies(Przypisanie entity)
		{
			this.SendPropertyChanging();
			entity.Ekspozycja = this;
		}
		
		private void detach_Przypisanies(Przypisanie entity)
		{
			this.SendPropertyChanging();
			entity.Ekspozycja = null;
		}
		
		private void attach_Sprzedazs(Sprzedaz entity)
		{
			this.SendPropertyChanging();
			entity.Ekspozycja = this;
		}
		
		private void detach_Sprzedazs(Sprzedaz entity)
		{
			this.SendPropertyChanging();
			entity.Ekspozycja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lokalizacja")]
	public partial class Lokalizacja : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_lokalizacji;
		
		private string _nazwa_lokalizacji;
		
		private string _opis_lokalizacji;
		
		private EntitySet<Ekspozycja> _Ekspozycjas;
		
		private EntitySet<Sala> _Salas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_lokalizacjiChanging(int value);
    partial void Onid_lokalizacjiChanged();
    partial void Onnazwa_lokalizacjiChanging(string value);
    partial void Onnazwa_lokalizacjiChanged();
    partial void Onopis_lokalizacjiChanging(string value);
    partial void Onopis_lokalizacjiChanged();
    #endregion
		
		public Lokalizacja()
		{
			this._Ekspozycjas = new EntitySet<Ekspozycja>(new Action<Ekspozycja>(this.attach_Ekspozycjas), new Action<Ekspozycja>(this.detach_Ekspozycjas));
			this._Salas = new EntitySet<Sala>(new Action<Sala>(this.attach_Salas), new Action<Sala>(this.detach_Salas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lokalizacji", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_lokalizacji
		{
			get
			{
				return this._id_lokalizacji;
			}
			set
			{
				if ((this._id_lokalizacji != value))
				{
					this.Onid_lokalizacjiChanging(value);
					this.SendPropertyChanging();
					this._id_lokalizacji = value;
					this.SendPropertyChanged("id_lokalizacji");
					this.Onid_lokalizacjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_lokalizacji", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_lokalizacji
		{
			get
			{
				return this._nazwa_lokalizacji;
			}
			set
			{
				if ((this._nazwa_lokalizacji != value))
				{
					this.Onnazwa_lokalizacjiChanging(value);
					this.SendPropertyChanging();
					this._nazwa_lokalizacji = value;
					this.SendPropertyChanged("nazwa_lokalizacji");
					this.Onnazwa_lokalizacjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis_lokalizacji", DbType="VarChar(150)")]
		public string opis_lokalizacji
		{
			get
			{
				return this._opis_lokalizacji;
			}
			set
			{
				if ((this._opis_lokalizacji != value))
				{
					this.Onopis_lokalizacjiChanging(value);
					this.SendPropertyChanging();
					this._opis_lokalizacji = value;
					this.SendPropertyChanged("opis_lokalizacji");
					this.Onopis_lokalizacjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lokalizacja_Ekspozycja", Storage="_Ekspozycjas", ThisKey="id_lokalizacji", OtherKey="id_lokalizacji")]
		public EntitySet<Ekspozycja> Ekspozycjas
		{
			get
			{
				return this._Ekspozycjas;
			}
			set
			{
				this._Ekspozycjas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lokalizacja_Sala", Storage="_Salas", ThisKey="id_lokalizacji", OtherKey="id_lokalizacji")]
		public EntitySet<Sala> Salas
		{
			get
			{
				return this._Salas;
			}
			set
			{
				this._Salas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ekspozycjas(Ekspozycja entity)
		{
			this.SendPropertyChanging();
			entity.Lokalizacja = this;
		}
		
		private void detach_Ekspozycjas(Ekspozycja entity)
		{
			this.SendPropertyChanging();
			entity.Lokalizacja = null;
		}
		
		private void attach_Salas(Sala entity)
		{
			this.SendPropertyChanging();
			entity.Lokalizacja = this;
		}
		
		private void detach_Salas(Sala entity)
		{
			this.SendPropertyChanging();
			entity.Lokalizacja = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Organizator")]
	public partial class Organizator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_organizatora;
		
		private string _nazwa_organizatora;
		
		private string _miasto_organizatora;
		
		private string _e_mail_organizatora;
		
		private string _telefon_organizatora;
		
		private EntitySet<Ekspozycja> _Ekspozycjas;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_organizatoraChanging(int value);
    partial void Onid_organizatoraChanged();
    partial void Onnazwa_organizatoraChanging(string value);
    partial void Onnazwa_organizatoraChanged();
    partial void Onmiasto_organizatoraChanging(string value);
    partial void Onmiasto_organizatoraChanged();
    partial void One_mail_organizatoraChanging(string value);
    partial void One_mail_organizatoraChanged();
    partial void Ontelefon_organizatoraChanging(string value);
    partial void Ontelefon_organizatoraChanged();
    #endregion
		
		public Organizator()
		{
			this._Ekspozycjas = new EntitySet<Ekspozycja>(new Action<Ekspozycja>(this.attach_Ekspozycjas), new Action<Ekspozycja>(this.detach_Ekspozycjas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_organizatora", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_organizatora
		{
			get
			{
				return this._id_organizatora;
			}
			set
			{
				if ((this._id_organizatora != value))
				{
					this.Onid_organizatoraChanging(value);
					this.SendPropertyChanging();
					this._id_organizatora = value;
					this.SendPropertyChanged("id_organizatora");
					this.Onid_organizatoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_organizatora", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_organizatora
		{
			get
			{
				return this._nazwa_organizatora;
			}
			set
			{
				if ((this._nazwa_organizatora != value))
				{
					this.Onnazwa_organizatoraChanging(value);
					this.SendPropertyChanging();
					this._nazwa_organizatora = value;
					this.SendPropertyChanged("nazwa_organizatora");
					this.Onnazwa_organizatoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_miasto_organizatora", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string miasto_organizatora
		{
			get
			{
				return this._miasto_organizatora;
			}
			set
			{
				if ((this._miasto_organizatora != value))
				{
					this.Onmiasto_organizatoraChanging(value);
					this.SendPropertyChanging();
					this._miasto_organizatora = value;
					this.SendPropertyChanged("miasto_organizatora");
					this.Onmiasto_organizatoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_mail_organizatora", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string e_mail_organizatora
		{
			get
			{
				return this._e_mail_organizatora;
			}
			set
			{
				if ((this._e_mail_organizatora != value))
				{
					this.One_mail_organizatoraChanging(value);
					this.SendPropertyChanging();
					this._e_mail_organizatora = value;
					this.SendPropertyChanged("e_mail_organizatora");
					this.One_mail_organizatoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefon_organizatora", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string telefon_organizatora
		{
			get
			{
				return this._telefon_organizatora;
			}
			set
			{
				if ((this._telefon_organizatora != value))
				{
					this.Ontelefon_organizatoraChanging(value);
					this.SendPropertyChanging();
					this._telefon_organizatora = value;
					this.SendPropertyChanged("telefon_organizatora");
					this.Ontelefon_organizatoraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Organizator_Ekspozycja", Storage="_Ekspozycjas", ThisKey="id_organizatora", OtherKey="id_organizatora")]
		public EntitySet<Ekspozycja> Ekspozycjas
		{
			get
			{
				return this._Ekspozycjas;
			}
			set
			{
				this._Ekspozycjas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ekspozycjas(Ekspozycja entity)
		{
			this.SendPropertyChanging();
			entity.Organizator = this;
		}
		
		private void detach_Ekspozycjas(Ekspozycja entity)
		{
			this.SendPropertyChanging();
			entity.Organizator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prezentacje")]
	public partial class Prezentacje : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_prezentacji;
		
		private System.DateTime _data_rozpoczecia;
		
		private System.DateTime _data_zakonczenia;
		
		private int _id_eksponatu;
		
		private int _id_ekspozycji;
		
		private int _id_sali;
		
		private EntityRef<Eksponat> _Eksponat;
		
		private EntityRef<Ekspozycja> _Ekspozycja;
		
		private EntityRef<Sala> _Sala;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_prezentacjiChanging(int value);
    partial void Onid_prezentacjiChanged();
    partial void Ondata_rozpoczeciaChanging(System.DateTime value);
    partial void Ondata_rozpoczeciaChanged();
    partial void Ondata_zakonczeniaChanging(System.DateTime value);
    partial void Ondata_zakonczeniaChanged();
    partial void Onid_eksponatuChanging(int value);
    partial void Onid_eksponatuChanged();
    partial void Onid_ekspozycjiChanging(int value);
    partial void Onid_ekspozycjiChanged();
    partial void Onid_saliChanging(int value);
    partial void Onid_saliChanged();
    #endregion
		
		public Prezentacje()
		{
			this._Eksponat = default(EntityRef<Eksponat>);
			this._Ekspozycja = default(EntityRef<Ekspozycja>);
			this._Sala = default(EntityRef<Sala>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_prezentacji", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_prezentacji
		{
			get
			{
				return this._id_prezentacji;
			}
			set
			{
				if ((this._id_prezentacji != value))
				{
					this.Onid_prezentacjiChanging(value);
					this.SendPropertyChanging();
					this._id_prezentacji = value;
					this.SendPropertyChanged("id_prezentacji");
					this.Onid_prezentacjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_rozpoczecia", DbType="Date NOT NULL")]
		public System.DateTime data_rozpoczecia
		{
			get
			{
				return this._data_rozpoczecia;
			}
			set
			{
				if ((this._data_rozpoczecia != value))
				{
					this.Ondata_rozpoczeciaChanging(value);
					this.SendPropertyChanging();
					this._data_rozpoczecia = value;
					this.SendPropertyChanged("data_rozpoczecia");
					this.Ondata_rozpoczeciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_zakonczenia", DbType="Date NOT NULL")]
		public System.DateTime data_zakonczenia
		{
			get
			{
				return this._data_zakonczenia;
			}
			set
			{
				if ((this._data_zakonczenia != value))
				{
					this.Ondata_zakonczeniaChanging(value);
					this.SendPropertyChanging();
					this._data_zakonczenia = value;
					this.SendPropertyChanged("data_zakonczenia");
					this.Ondata_zakonczeniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_eksponatu", DbType="Int NOT NULL")]
		public int id_eksponatu
		{
			get
			{
				return this._id_eksponatu;
			}
			set
			{
				if ((this._id_eksponatu != value))
				{
					if (this._Eksponat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_eksponatuChanging(value);
					this.SendPropertyChanging();
					this._id_eksponatu = value;
					this.SendPropertyChanged("id_eksponatu");
					this.Onid_eksponatuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ekspozycji", DbType="Int NOT NULL")]
		public int id_ekspozycji
		{
			get
			{
				return this._id_ekspozycji;
			}
			set
			{
				if ((this._id_ekspozycji != value))
				{
					if (this._Ekspozycja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ekspozycjiChanging(value);
					this.SendPropertyChanging();
					this._id_ekspozycji = value;
					this.SendPropertyChanged("id_ekspozycji");
					this.Onid_ekspozycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sali", DbType="Int NOT NULL")]
		public int id_sali
		{
			get
			{
				return this._id_sali;
			}
			set
			{
				if ((this._id_sali != value))
				{
					if (this._Sala.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_saliChanging(value);
					this.SendPropertyChanging();
					this._id_sali = value;
					this.SendPropertyChanged("id_sali");
					this.Onid_saliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Eksponat_Prezentacje", Storage="_Eksponat", ThisKey="id_eksponatu", OtherKey="id_eksponatu", IsForeignKey=true)]
		public Eksponat Eksponat
		{
			get
			{
				return this._Eksponat.Entity;
			}
			set
			{
				Eksponat previousValue = this._Eksponat.Entity;
				if (((previousValue != value) 
							|| (this._Eksponat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Eksponat.Entity = null;
						previousValue.Prezentacjes.Remove(this);
					}
					this._Eksponat.Entity = value;
					if ((value != null))
					{
						value.Prezentacjes.Add(this);
						this._id_eksponatu = value.id_eksponatu;
					}
					else
					{
						this._id_eksponatu = default(int);
					}
					this.SendPropertyChanged("Eksponat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ekspozycja_Prezentacje", Storage="_Ekspozycja", ThisKey="id_ekspozycji", OtherKey="id_ekspozycji", IsForeignKey=true)]
		public Ekspozycja Ekspozycja
		{
			get
			{
				return this._Ekspozycja.Entity;
			}
			set
			{
				Ekspozycja previousValue = this._Ekspozycja.Entity;
				if (((previousValue != value) 
							|| (this._Ekspozycja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ekspozycja.Entity = null;
						previousValue.Prezentacjes.Remove(this);
					}
					this._Ekspozycja.Entity = value;
					if ((value != null))
					{
						value.Prezentacjes.Add(this);
						this._id_ekspozycji = value.id_ekspozycji;
					}
					else
					{
						this._id_ekspozycji = default(int);
					}
					this.SendPropertyChanged("Ekspozycja");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sala_Prezentacje", Storage="_Sala", ThisKey="id_sali", OtherKey="id_sali", IsForeignKey=true)]
		public Sala Sala
		{
			get
			{
				return this._Sala.Entity;
			}
			set
			{
				Sala previousValue = this._Sala.Entity;
				if (((previousValue != value) 
							|| (this._Sala.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sala.Entity = null;
						previousValue.Prezentacjes.Remove(this);
					}
					this._Sala.Entity = value;
					if ((value != null))
					{
						value.Prezentacjes.Add(this);
						this._id_sali = value.id_sali;
					}
					else
					{
						this._id_sali = default(int);
					}
					this.SendPropertyChanged("Sala");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Przypisanie")]
	public partial class Przypisanie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_przypisania;
		
		private int _id_eksponatu;
		
		private int _id_ekspozycji;
		
		private EntityRef<Eksponat> _Eksponat;
		
		private EntityRef<Ekspozycja> _Ekspozycja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_przypisaniaChanging(int value);
    partial void Onid_przypisaniaChanged();
    partial void Onid_eksponatuChanging(int value);
    partial void Onid_eksponatuChanged();
    partial void Onid_ekspozycjiChanging(int value);
    partial void Onid_ekspozycjiChanged();
    #endregion
		
		public Przypisanie()
		{
			this._Eksponat = default(EntityRef<Eksponat>);
			this._Ekspozycja = default(EntityRef<Ekspozycja>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_przypisania", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_przypisania
		{
			get
			{
				return this._id_przypisania;
			}
			set
			{
				if ((this._id_przypisania != value))
				{
					this.Onid_przypisaniaChanging(value);
					this.SendPropertyChanging();
					this._id_przypisania = value;
					this.SendPropertyChanged("id_przypisania");
					this.Onid_przypisaniaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_eksponatu", DbType="Int NOT NULL")]
		public int id_eksponatu
		{
			get
			{
				return this._id_eksponatu;
			}
			set
			{
				if ((this._id_eksponatu != value))
				{
					if (this._Eksponat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_eksponatuChanging(value);
					this.SendPropertyChanging();
					this._id_eksponatu = value;
					this.SendPropertyChanged("id_eksponatu");
					this.Onid_eksponatuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ekspozycji", DbType="Int NOT NULL")]
		public int id_ekspozycji
		{
			get
			{
				return this._id_ekspozycji;
			}
			set
			{
				if ((this._id_ekspozycji != value))
				{
					if (this._Ekspozycja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ekspozycjiChanging(value);
					this.SendPropertyChanging();
					this._id_ekspozycji = value;
					this.SendPropertyChanged("id_ekspozycji");
					this.Onid_ekspozycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Eksponat_Przypisanie", Storage="_Eksponat", ThisKey="id_eksponatu", OtherKey="id_eksponatu", IsForeignKey=true)]
		public Eksponat Eksponat
		{
			get
			{
				return this._Eksponat.Entity;
			}
			set
			{
				Eksponat previousValue = this._Eksponat.Entity;
				if (((previousValue != value) 
							|| (this._Eksponat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Eksponat.Entity = null;
						previousValue.Przypisanies.Remove(this);
					}
					this._Eksponat.Entity = value;
					if ((value != null))
					{
						value.Przypisanies.Add(this);
						this._id_eksponatu = value.id_eksponatu;
					}
					else
					{
						this._id_eksponatu = default(int);
					}
					this.SendPropertyChanged("Eksponat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ekspozycja_Przypisanie", Storage="_Ekspozycja", ThisKey="id_ekspozycji", OtherKey="id_ekspozycji", IsForeignKey=true)]
		public Ekspozycja Ekspozycja
		{
			get
			{
				return this._Ekspozycja.Entity;
			}
			set
			{
				Ekspozycja previousValue = this._Ekspozycja.Entity;
				if (((previousValue != value) 
							|| (this._Ekspozycja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ekspozycja.Entity = null;
						previousValue.Przypisanies.Remove(this);
					}
					this._Ekspozycja.Entity = value;
					if ((value != null))
					{
						value.Przypisanies.Add(this);
						this._id_ekspozycji = value.id_ekspozycji;
					}
					else
					{
						this._id_ekspozycji = default(int);
					}
					this.SendPropertyChanged("Ekspozycja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sala")]
	public partial class Sala : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_sali;
		
		private int _id_lokalizacji;
		
		private string _nazwa_sali;
		
		private string _opis_sali;
		
		private EntitySet<Prezentacje> _Prezentacjes;
		
		private EntityRef<Lokalizacja> _Lokalizacja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_saliChanging(int value);
    partial void Onid_saliChanged();
    partial void Onid_lokalizacjiChanging(int value);
    partial void Onid_lokalizacjiChanged();
    partial void Onnazwa_saliChanging(string value);
    partial void Onnazwa_saliChanged();
    partial void Onopis_saliChanging(string value);
    partial void Onopis_saliChanged();
    #endregion
		
		public Sala()
		{
			this._Prezentacjes = new EntitySet<Prezentacje>(new Action<Prezentacje>(this.attach_Prezentacjes), new Action<Prezentacje>(this.detach_Prezentacjes));
			this._Lokalizacja = default(EntityRef<Lokalizacja>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sali", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_sali
		{
			get
			{
				return this._id_sali;
			}
			set
			{
				if ((this._id_sali != value))
				{
					this.Onid_saliChanging(value);
					this.SendPropertyChanging();
					this._id_sali = value;
					this.SendPropertyChanged("id_sali");
					this.Onid_saliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lokalizacji", DbType="Int NOT NULL")]
		public int id_lokalizacji
		{
			get
			{
				return this._id_lokalizacji;
			}
			set
			{
				if ((this._id_lokalizacji != value))
				{
					if (this._Lokalizacja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_lokalizacjiChanging(value);
					this.SendPropertyChanging();
					this._id_lokalizacji = value;
					this.SendPropertyChanged("id_lokalizacji");
					this.Onid_lokalizacjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_sali", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_sali
		{
			get
			{
				return this._nazwa_sali;
			}
			set
			{
				if ((this._nazwa_sali != value))
				{
					this.Onnazwa_saliChanging(value);
					this.SendPropertyChanging();
					this._nazwa_sali = value;
					this.SendPropertyChanged("nazwa_sali");
					this.Onnazwa_saliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis_sali", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string opis_sali
		{
			get
			{
				return this._opis_sali;
			}
			set
			{
				if ((this._opis_sali != value))
				{
					this.Onopis_saliChanging(value);
					this.SendPropertyChanging();
					this._opis_sali = value;
					this.SendPropertyChanged("opis_sali");
					this.Onopis_saliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sala_Prezentacje", Storage="_Prezentacjes", ThisKey="id_sali", OtherKey="id_sali")]
		public EntitySet<Prezentacje> Prezentacjes
		{
			get
			{
				return this._Prezentacjes;
			}
			set
			{
				this._Prezentacjes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Lokalizacja_Sala", Storage="_Lokalizacja", ThisKey="id_lokalizacji", OtherKey="id_lokalizacji", IsForeignKey=true)]
		public Lokalizacja Lokalizacja
		{
			get
			{
				return this._Lokalizacja.Entity;
			}
			set
			{
				Lokalizacja previousValue = this._Lokalizacja.Entity;
				if (((previousValue != value) 
							|| (this._Lokalizacja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Lokalizacja.Entity = null;
						previousValue.Salas.Remove(this);
					}
					this._Lokalizacja.Entity = value;
					if ((value != null))
					{
						value.Salas.Add(this);
						this._id_lokalizacji = value.id_lokalizacji;
					}
					else
					{
						this._id_lokalizacji = default(int);
					}
					this.SendPropertyChanged("Lokalizacja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prezentacjes(Prezentacje entity)
		{
			this.SendPropertyChanging();
			entity.Sala = this;
		}
		
		private void detach_Prezentacjes(Prezentacje entity)
		{
			this.SendPropertyChanging();
			entity.Sala = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sprzedaz")]
	public partial class Sprzedaz : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_sprzedazy;
		
		private int _id_ekspozycji;
		
		private int _id_biletu;
		
		private EntityRef<Bilet> _Bilet;
		
		private EntityRef<Ekspozycja> _Ekspozycja;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_sprzedazyChanging(int value);
    partial void Onid_sprzedazyChanged();
    partial void Onid_ekspozycjiChanging(int value);
    partial void Onid_ekspozycjiChanged();
    partial void Onid_biletuChanging(int value);
    partial void Onid_biletuChanged();
    #endregion
		
		public Sprzedaz()
		{
			this._Bilet = default(EntityRef<Bilet>);
			this._Ekspozycja = default(EntityRef<Ekspozycja>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sprzedazy", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_sprzedazy
		{
			get
			{
				return this._id_sprzedazy;
			}
			set
			{
				if ((this._id_sprzedazy != value))
				{
					this.Onid_sprzedazyChanging(value);
					this.SendPropertyChanging();
					this._id_sprzedazy = value;
					this.SendPropertyChanged("id_sprzedazy");
					this.Onid_sprzedazyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ekspozycji", DbType="Int NOT NULL")]
		public int id_ekspozycji
		{
			get
			{
				return this._id_ekspozycji;
			}
			set
			{
				if ((this._id_ekspozycji != value))
				{
					if (this._Ekspozycja.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ekspozycjiChanging(value);
					this.SendPropertyChanging();
					this._id_ekspozycji = value;
					this.SendPropertyChanged("id_ekspozycji");
					this.Onid_ekspozycjiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_biletu", DbType="Int NOT NULL")]
		public int id_biletu
		{
			get
			{
				return this._id_biletu;
			}
			set
			{
				if ((this._id_biletu != value))
				{
					if (this._Bilet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_biletuChanging(value);
					this.SendPropertyChanging();
					this._id_biletu = value;
					this.SendPropertyChanged("id_biletu");
					this.Onid_biletuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bilet_Sprzedaz", Storage="_Bilet", ThisKey="id_biletu", OtherKey="id_biletu", IsForeignKey=true)]
		public Bilet Bilet
		{
			get
			{
				return this._Bilet.Entity;
			}
			set
			{
				Bilet previousValue = this._Bilet.Entity;
				if (((previousValue != value) 
							|| (this._Bilet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bilet.Entity = null;
						previousValue.Sprzedazs.Remove(this);
					}
					this._Bilet.Entity = value;
					if ((value != null))
					{
						value.Sprzedazs.Add(this);
						this._id_biletu = value.id_biletu;
					}
					else
					{
						this._id_biletu = default(int);
					}
					this.SendPropertyChanged("Bilet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ekspozycja_Sprzedaz", Storage="_Ekspozycja", ThisKey="id_ekspozycji", OtherKey="id_ekspozycji", IsForeignKey=true)]
		public Ekspozycja Ekspozycja
		{
			get
			{
				return this._Ekspozycja.Entity;
			}
			set
			{
				Ekspozycja previousValue = this._Ekspozycja.Entity;
				if (((previousValue != value) 
							|| (this._Ekspozycja.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ekspozycja.Entity = null;
						previousValue.Sprzedazs.Remove(this);
					}
					this._Ekspozycja.Entity = value;
					if ((value != null))
					{
						value.Sprzedazs.Add(this);
						this._id_ekspozycji = value.id_ekspozycji;
					}
					else
					{
						this._id_ekspozycji = default(int);
					}
					this.SendPropertyChanged("Ekspozycja");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetAuthorsResult
	{
		
		private int _id_autora;
		
		private string _nazwa_autora;
		
		private System.Nullable<System.DateTime> _data_urodzenia;
		
		private System.Nullable<System.DateTime> _data_smierci;
		
		private string _opis_autora;
		
		public GetAuthorsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_autora", DbType="Int NOT NULL")]
		public int id_autora
		{
			get
			{
				return this._id_autora;
			}
			set
			{
				if ((this._id_autora != value))
				{
					this._id_autora = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_autora", DbType="VarChar(50)")]
		public string nazwa_autora
		{
			get
			{
				return this._nazwa_autora;
			}
			set
			{
				if ((this._nazwa_autora != value))
				{
					this._nazwa_autora = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_urodzenia", DbType="Date")]
		public System.Nullable<System.DateTime> data_urodzenia
		{
			get
			{
				return this._data_urodzenia;
			}
			set
			{
				if ((this._data_urodzenia != value))
				{
					this._data_urodzenia = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_smierci", DbType="Date")]
		public System.Nullable<System.DateTime> data_smierci
		{
			get
			{
				return this._data_smierci;
			}
			set
			{
				if ((this._data_smierci != value))
				{
					this._data_smierci = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis_autora", DbType="VarChar(150)")]
		public string opis_autora
		{
			get
			{
				return this._opis_autora;
			}
			set
			{
				if ((this._opis_autora != value))
				{
					this._opis_autora = value;
				}
			}
		}
	}
	
	public partial class GetExhibitsResult
	{
		
		private int _id_eksponatu;
		
		private string _nazwa_eksponatu;
		
		private string _opis_eksponatu;
		
		private string _nazwa_autora;
		
		private string _nazwa_wlasciciela;
		
		public GetExhibitsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_eksponatu", DbType="Int NOT NULL")]
		public int id_eksponatu
		{
			get
			{
				return this._id_eksponatu;
			}
			set
			{
				if ((this._id_eksponatu != value))
				{
					this._id_eksponatu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_eksponatu", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_eksponatu
		{
			get
			{
				return this._nazwa_eksponatu;
			}
			set
			{
				if ((this._nazwa_eksponatu != value))
				{
					this._nazwa_eksponatu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis_eksponatu", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string opis_eksponatu
		{
			get
			{
				return this._opis_eksponatu;
			}
			set
			{
				if ((this._opis_eksponatu != value))
				{
					this._opis_eksponatu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_autora", DbType="VarChar(50)")]
		public string nazwa_autora
		{
			get
			{
				return this._nazwa_autora;
			}
			set
			{
				if ((this._nazwa_autora != value))
				{
					this._nazwa_autora = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_wlasciciela", DbType="VarChar(50)")]
		public string nazwa_wlasciciela
		{
			get
			{
				return this._nazwa_wlasciciela;
			}
			set
			{
				if ((this._nazwa_wlasciciela != value))
				{
					this._nazwa_wlasciciela = value;
				}
			}
		}
	}
	
	public partial class GetExpositionsResult
	{
		
		private int _id_ekspozycji;
		
		private string _nazwa_ekspozycji;
		
		private string _nazwa_organizatora;
		
		private string _nazwa_lokalizacji;
		
		private string _opis_ekspozycji;
		
		private System.Nullable<int> _sprzedane_bilety;
		
		private System.Nullable<decimal> _zysk;
		
		public GetExpositionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_ekspozycji", DbType="Int NOT NULL")]
		public int id_ekspozycji
		{
			get
			{
				return this._id_ekspozycji;
			}
			set
			{
				if ((this._id_ekspozycji != value))
				{
					this._id_ekspozycji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_ekspozycji", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_ekspozycji
		{
			get
			{
				return this._nazwa_ekspozycji;
			}
			set
			{
				if ((this._nazwa_ekspozycji != value))
				{
					this._nazwa_ekspozycji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_organizatora", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_organizatora
		{
			get
			{
				return this._nazwa_organizatora;
			}
			set
			{
				if ((this._nazwa_organizatora != value))
				{
					this._nazwa_organizatora = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_lokalizacji", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_lokalizacji
		{
			get
			{
				return this._nazwa_lokalizacji;
			}
			set
			{
				if ((this._nazwa_lokalizacji != value))
				{
					this._nazwa_lokalizacji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis_ekspozycji", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string opis_ekspozycji
		{
			get
			{
				return this._opis_ekspozycji;
			}
			set
			{
				if ((this._opis_ekspozycji != value))
				{
					this._opis_ekspozycji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sprzedane_bilety", DbType="Int")]
		public System.Nullable<int> sprzedane_bilety
		{
			get
			{
				return this._sprzedane_bilety;
			}
			set
			{
				if ((this._sprzedane_bilety != value))
				{
					this._sprzedane_bilety = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zysk", DbType="Money")]
		public System.Nullable<decimal> zysk
		{
			get
			{
				return this._zysk;
			}
			set
			{
				if ((this._zysk != value))
				{
					this._zysk = value;
				}
			}
		}
	}
	
	public partial class GetHallsResult
	{
		
		private int _id_sali;
		
		private string _nazwa_lokalizacji;
		
		private string _nazwa_sali;
		
		private string _opis_sali;
		
		public GetHallsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_sali", DbType="Int NOT NULL")]
		public int id_sali
		{
			get
			{
				return this._id_sali;
			}
			set
			{
				if ((this._id_sali != value))
				{
					this._id_sali = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_lokalizacji", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_lokalizacji
		{
			get
			{
				return this._nazwa_lokalizacji;
			}
			set
			{
				if ((this._nazwa_lokalizacji != value))
				{
					this._nazwa_lokalizacji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_sali", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_sali
		{
			get
			{
				return this._nazwa_sali;
			}
			set
			{
				if ((this._nazwa_sali != value))
				{
					this._nazwa_sali = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis_sali", DbType="VarChar(150) NOT NULL", CanBeNull=false)]
		public string opis_sali
		{
			get
			{
				return this._opis_sali;
			}
			set
			{
				if ((this._opis_sali != value))
				{
					this._opis_sali = value;
				}
			}
		}
	}
	
	public partial class GetLocationsResult
	{
		
		private int _id_lokalizacji;
		
		private string _nazwa_lokalizacji;
		
		private string _opis_lokalizacji;
		
		public GetLocationsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_lokalizacji", DbType="Int NOT NULL")]
		public int id_lokalizacji
		{
			get
			{
				return this._id_lokalizacji;
			}
			set
			{
				if ((this._id_lokalizacji != value))
				{
					this._id_lokalizacji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_lokalizacji", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_lokalizacji
		{
			get
			{
				return this._nazwa_lokalizacji;
			}
			set
			{
				if ((this._nazwa_lokalizacji != value))
				{
					this._nazwa_lokalizacji = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opis_lokalizacji", DbType="VarChar(150)")]
		public string opis_lokalizacji
		{
			get
			{
				return this._opis_lokalizacji;
			}
			set
			{
				if ((this._opis_lokalizacji != value))
				{
					this._opis_lokalizacji = value;
				}
			}
		}
	}
	
	public partial class GetOrgsResult
	{
		
		private int _id_organizatora;
		
		private string _nazwa_organizatora;
		
		private string _miasto_organizatora;
		
		private string _e_mail_organizatora;
		
		private string _telefon_organizatora;
		
		public GetOrgsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_organizatora", DbType="Int NOT NULL")]
		public int id_organizatora
		{
			get
			{
				return this._id_organizatora;
			}
			set
			{
				if ((this._id_organizatora != value))
				{
					this._id_organizatora = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_organizatora", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_organizatora
		{
			get
			{
				return this._nazwa_organizatora;
			}
			set
			{
				if ((this._nazwa_organizatora != value))
				{
					this._nazwa_organizatora = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_miasto_organizatora", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string miasto_organizatora
		{
			get
			{
				return this._miasto_organizatora;
			}
			set
			{
				if ((this._miasto_organizatora != value))
				{
					this._miasto_organizatora = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_e_mail_organizatora", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string e_mail_organizatora
		{
			get
			{
				return this._e_mail_organizatora;
			}
			set
			{
				if ((this._e_mail_organizatora != value))
				{
					this._e_mail_organizatora = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefon_organizatora", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string telefon_organizatora
		{
			get
			{
				return this._telefon_organizatora;
			}
			set
			{
				if ((this._telefon_organizatora != value))
				{
					this._telefon_organizatora = value;
				}
			}
		}
	}
	
	public partial class GetOwnersResult
	{
		
		private int _id_wlasciciela;
		
		private string _nazwa_wlasciciela;
		
		private string _miasto_wlasciciela;
		
		private string _kraj_wlasciciela;
		
		private string _email_wlasciciela;
		
		private string _telefon_wlasciciela;
		
		public GetOwnersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_wlasciciela", DbType="Int NOT NULL")]
		public int id_wlasciciela
		{
			get
			{
				return this._id_wlasciciela;
			}
			set
			{
				if ((this._id_wlasciciela != value))
				{
					this._id_wlasciciela = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_wlasciciela", DbType="VarChar(50)")]
		public string nazwa_wlasciciela
		{
			get
			{
				return this._nazwa_wlasciciela;
			}
			set
			{
				if ((this._nazwa_wlasciciela != value))
				{
					this._nazwa_wlasciciela = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_miasto_wlasciciela", DbType="VarChar(50)")]
		public string miasto_wlasciciela
		{
			get
			{
				return this._miasto_wlasciciela;
			}
			set
			{
				if ((this._miasto_wlasciciela != value))
				{
					this._miasto_wlasciciela = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kraj_wlasciciela", DbType="VarChar(50)")]
		public string kraj_wlasciciela
		{
			get
			{
				return this._kraj_wlasciciela;
			}
			set
			{
				if ((this._kraj_wlasciciela != value))
				{
					this._kraj_wlasciciela = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_wlasciciela", DbType="VarChar(50)")]
		public string email_wlasciciela
		{
			get
			{
				return this._email_wlasciciela;
			}
			set
			{
				if ((this._email_wlasciciela != value))
				{
					this._email_wlasciciela = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefon_wlasciciela", DbType="VarChar(50)")]
		public string telefon_wlasciciela
		{
			get
			{
				return this._telefon_wlasciciela;
			}
			set
			{
				if ((this._telefon_wlasciciela != value))
				{
					this._telefon_wlasciciela = value;
				}
			}
		}
	}
	
	public partial class GetTicketsResult
	{
		
		private int _id_biletu;
		
		private decimal _cena_biletu;
		
		private string _nazwa_biletu;
		
		public GetTicketsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_biletu", DbType="Int NOT NULL")]
		public int id_biletu
		{
			get
			{
				return this._id_biletu;
			}
			set
			{
				if ((this._id_biletu != value))
				{
					this._id_biletu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cena_biletu", DbType="SmallMoney NOT NULL")]
		public decimal cena_biletu
		{
			get
			{
				return this._cena_biletu;
			}
			set
			{
				if ((this._cena_biletu != value))
				{
					this._cena_biletu = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa_biletu", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string nazwa_biletu
		{
			get
			{
				return this._nazwa_biletu;
			}
			set
			{
				if ((this._nazwa_biletu != value))
				{
					this._nazwa_biletu = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
